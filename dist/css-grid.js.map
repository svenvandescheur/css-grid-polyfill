{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 01af2a208dbfc532821a","webpack:///./src/index.js","webpack:///./~/enquire.js/src/index.js","webpack:///./~/enquire.js/src/MediaQueryDispatch.js","webpack:///./~/enquire.js/src/MediaQuery.js","webpack:///./~/enquire.js/src/QueryHandler.js","webpack:///./~/enquire.js/src/Util.js"],"names":["Polyfill","stylesheet","document","styleSheets","ast","bindEvents","update","window","addEventListener","bind","createAST","apply","rules","filter","call","rule","parentRule","type","CSSRule","STYLE_RULE","map","Rule","css","isGridRelated","cssRules","forEach","mediaRule","push","AST","console","log","containers","tree","node","container","position","style","toLowerCase","containerColumns","meta","columns","containerColumnCount","length","containerTotalWidth","clientWidth","containerGutterWidth","parseInt","colGap","containerGutterHeight","rowGap","containerTotalGutterWidth","containerColumnWidth","columnCursor","rowCursor","rowIndex","rowSpans","rows","ruleNode","index","itemColumnObject","width","itemColSpan","colSpan","itemWidth","gutters","Math","max","columnIndex","skipped","rSpan","rowSpan","skippedWidth","nextLeft","tallestColumn","getTallestRuleNode","clientHeight","left","top","row","column","rowsToCheck","guttersHeight","i","nextRow","height","scrollHeight","ruleNodes","reduce","acc","val","isApplicable","getRuleNodes","getContainerRules","getItemRules","buildTree","isDisplayGrid","nodes","rNodes","rNode","RuleNode","existing","rn","key","items","getItemRuleNodes","getContainerRuleNodes","indexOf","children","item","data","parseCSS","selector","querySelectorAll","addMeta","split","cssText","trim","replace","JSON","parse","addColumns","addGridArea","addGap","addSpan","match","property","span","keys","Object","evaluateMediaRule","result","mq","register","unmatch"],"mappings":"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EA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,4BAA4B;AAC3C,gBAAe,SAAS;AACxB,gBAAe,SAAS;AACxB,gBAAe,SAAS;AACxB,gBAAe,QAAQ;AACvB,gBAAe,QAAQ;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,wBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B;AAC3B;AACA;AACA,UAAS;;AAET;AACA,MAAK;;AAEL;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,mBAAmB;AAClC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;ACpFA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,SAAS;AACxB,gBAAe,SAAS;AACxB,gBAAe,SAAS;AACxB,gBAAe,QAAQ;AACvB;AACA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA,gBAAe,mBAAmB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C;AAC7C;AACA,UAAS;AACT,MAAK;;AAEL;AACA;AACA;AACA,iBAAgB,QAAQ;AACxB;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,kCAAiC;AACjC,MAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAS;AACT;AACA;;AAEA;;;;;;;AC5FA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,SAAS;AACpB,YAAW,SAAS;AACpB,YAAW,SAAS;AACpB,YAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,gBAAe,mBAAmB;AAClC;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;ACzEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,WAAU,YAAY;AACtB;AACA;AACA,mBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"css-grid.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 01af2a208dbfc532821a","import enquire from \"enquire.js\";\n\n\n/**\n * Main polyfill class.\n * @class\n */\nclass Polyfill {\n    /**\n     * Constructor method.\n     */\n    constructor() {\n        /** {CSSStyleSheet} */\n        this.stylesheet = document.styleSheets[0];\n\n        /** {AST|null} */\n        this.ast = null;\n\n        this.bindEvents();\n        this.update();\n    }\n\n    /**\n     * Binds events to callbacks.\n     */\n    bindEvents() {\n        window.addEventListener('resize', this.update.bind(this));\n    }\n\n    /**\n     * Updates the polyfill.\n     */\n    update() {\n        this.ast = this.createAST();\n        this.apply();\n    }\n\n    /**\n     * Converts this.stylesheets to an abstract syntax tree like object.\n     * Returned object is used by this.apply() to polyfill CSS grid behaviour.\n     * @returns {AST}\n     */\n    createAST() {\n        let rules = [].filter.call(this.stylesheet.rules, rule => !rule.parentRule && rule.type === CSSRule.STYLE_RULE)\n            .map(css => new Rule(css))\n            .filter(rule => rule.isGridRelated());\n\n        [].filter.call(this.stylesheet.cssRules, rule => rule.type === 4)\n            .forEach(mediaRule => {\n                [].forEach.call(mediaRule.cssRules, css => {\n                    rules.push(new Rule(css, mediaRule));\n                });\n            });\n        return new AST(rules);\n    }\n\n\n\n\n    /**\n     * Builds the grid based on this.ast.\n     */\n    apply() {\n        console.log('GENERATED AST', this.ast);\n        let containers = this.ast.tree;\n\n\n        // Generates code based on AST branches.\n        // This loop takes care of containers.\n        containers.forEach(container => {\n            let node = container.node;\n\n            // Apply container styles.\n            let position = node.style.position.toLowerCase();\n            if (position === '' || position === 'static') {\n                node.style.position = 'relative';\n            }\n\n\n            // Container specific variables.\n            let containerColumns = container.rule.meta.columns;\n            let containerColumnCount = container.rule.meta.columns.length;\n            let containerTotalWidth = container.node.clientWidth;\n            let containerGutterWidth = (parseInt(container.rule.meta.colGap) || 0);\n            let containerGutterHeight = (parseInt(container.rule.meta.rowGap) || 0);\n            let containerTotalGutterWidth = containerGutterWidth * (containerColumnCount - 1);\n            let containerColumnWidth = (containerTotalWidth - containerTotalGutterWidth) / containerColumnCount;\n\n\n            // Cursors.\n            let columnCursor = 0;\n            let rowCursor = 0;\n            let rowIndex = 0;\n            let rowSpans = [];\n            let rows = [];\n\n\n            // Generates code based on AST leaves.\n            // This loop takes care of column placement.\n            container.tree.forEach((ruleNode, index) => {\n                // Item specific variables.\n                let itemColumnObject = containerColumns[index] || {width: 'auto'};\n                let itemColSpan = ruleNode.rule.meta.colSpan || 1;\n                let itemWidth;\n\n\n                // Calculate width.\n                if (itemColumnObject.width === 'auto') {\n                    let gutters = Math.max(itemColSpan - 1, 0) * containerGutterWidth;\n                    itemWidth = containerColumnWidth * itemColSpan + gutters;\n                } else {\n                    itemWidth = parseInt(itemColumnObject.width);\n                }\n\n\n                // Check if we need to continue to the next row.\n                let columnIndex = (rows[rowIndex]) ? rows[rowIndex].length : 0;\n                let skipped = rowSpans.filter(rSpan => rSpan.index === columnIndex && rSpan.rowSpan > 0)[0];\n                let skippedWidth = (skipped) ? skipped.itemWidth + containerGutterWidth : 0;\n                let nextLeft = columnCursor - containerGutterWidth + itemWidth + skippedWidth;\n\n                if (nextLeft > containerTotalWidth) {\n                    let tallestColumn = this.getTallestRuleNode(rows[rowIndex]).node.clientHeight;\n                    columnCursor = 0;\n                    rowCursor += tallestColumn + containerGutterHeight;\n                    rowIndex++;\n                }\n                if (skipped) {\n                    skipped.rowSpan--;\n                }\n\n\n                // Add item to row\n                if (!rows[rowIndex]) {\n                    rows[rowIndex] = [];\n                }\n                rows[rowIndex].push(ruleNode);\n\n\n                // Apply items styles.\n                ruleNode.node.style.position = 'absolute';\n                ruleNode.node.style.width = itemWidth + 'px';\n                ruleNode.node.style.left = columnCursor + 'px';\n                ruleNode.node.style.top = rowCursor + 'px';\n\n\n                // Update cursors.\n                columnCursor += ruleNode.node.clientWidth + containerGutterWidth;\n\n\n                // Rowspan\n                let rowSpan = Math.max(ruleNode.rule.meta.rowSpan - 1 || 0, 0);\n\n                if (rowSpan) {\n                    rowSpans.push({index, rowSpan, itemWidth});\n                }\n            });\n\n\n            // Generates code based on generated rows.\n            // This loop takes care of row span.\n            rows.forEach((row, rowIndex) => {\n                row.forEach((column) => {\n                    let rowsToCheck = Math.max(column.rule.meta.rowSpan - 1 || 0, 0);\n\n                    if (!rows[rowIndex + 1]) {\n                        return;\n                    }\n\n                    let guttersHeight = rowsToCheck * parseInt(container.rule.meta.rowGap);\n                    let clientHeight = column.node.clientHeight + guttersHeight;\n\n                    for (let i = 1; i <= rowsToCheck; i++) {\n                        let nextRow = rows[rowIndex + i];\n\n                        if (nextRow) {\n                            clientHeight += this.getTallestRuleNode(nextRow).node.clientHeight;\n                        }\n                    }\n                    column.node.style.height = clientHeight + 'px';\n                });\n\n\n            });\n\n\n            // Update the container height based on the contents.\n            container.node.style.height = container.node.scrollHeight + 'px';\n        });\n    }\n\n    getTallestRuleNode(ruleNodes) {\n        return ruleNodes.reduce((acc, val) => {\n            return (acc.node.clientHeight > val.node.clientHeight) ? acc : val;\n        }, ruleNodes[0]);\n    }\n}\n\n\n/**\n * Represents the Abstract Syntax Tree\n */\nclass AST {\n    /**\n     * Constructor method.\n     * @param {Rule} rules\n     */\n    constructor(rules) {\n        /** {Rules[]} */\n        this.rules = rules.filter(rule => rule.isApplicable());\n\n        /** {RuleNode[] */\n        this.ruleNodes = [...this.getRuleNodes(this.getContainerRules()), ...this.getRuleNodes(this.getItemRules())];\n\n        /** {RuleNode[] */\n        this.tree = this.buildTree();\n    }\n\n    /**\n     * Returns the rules that describe grid containers (display: grid;).\n     * @returns {Rule[]}\n     */\n    getContainerRules() {\n        return this.rules.filter(rule => rule.isDisplayGrid());\n    }\n\n    /**\n     * Returns the rules that describe grid containers (display: grid;).\n     * @returns {Rule[]}\n     */\n    getContainerRuleNodes() {\n        return this.ruleNodes.filter(ruleNode => ruleNode.rule.isDisplayGrid());\n    }\n\n    /**\n     * Returns the rules that describe grid items.\n     * @returns {Rule[]}\n     */\n    getItemRules() {\n        return this.rules.filter(rule => !rule.isDisplayGrid());\n    }\n\n    /**\n     * Returns the rules that describe grid containers (display: grid;).\n     * @returns {Rule[]}\n     */\n    getItemRuleNodes() {\n        return this.ruleNodes.filter(ruleNode => !ruleNode.rule.isDisplayGrid());\n    }\n\n    /**\n     * Converts all nodes in all rules to RuleNode instances.\n     * @returns {RuleNode[]}\n     */\n    getRuleNodes(rules) {\n        let ruleNodes = [];\n\n        rules.forEach(rule => {\n            let nodes = rule.nodes;\n            let rNodes = [];\n\n            [].forEach.call(nodes, node => {\n                let rNode = new RuleNode(rule, node);\n\n                let existing = ruleNodes.filter(rn => rn.node === node)[0];\n                if (existing) {\n                    for (let key in rNode.rule.meta) {\n                        if (rNode.rule.meta[key]) {\n                            existing.rule.meta[key] = rNode.rule.meta[key];\n                        }\n                    }\n                } else {\n                    ruleNodes.push(rNode);\n                }\n            });\n\n            rNodes.forEach(ruleNode => ruleNodes.push(ruleNode));\n        });\n        return ruleNodes;\n    }\n\n    /**\n     * Returns a nested tree of RuleNode instances.\n     */\n    buildTree() {\n        let items = this.getItemRuleNodes();\n        let containers = this.getContainerRuleNodes();\n\n        containers.forEach(container => {\n            container.tree = items.filter(item => {\n                return [].indexOf.call(container.node.children, item.node) > -1;\n            });\n        });\n\n        return containers;\n    }\n}\n\n\n/**\n * Combines a single (cloned) Rule matched to a single Node\n * @class\n */\nclass RuleNode {\n    /**\n     * Constructor method.\n     * @param {Rule} rule\n     * @param {HTMLElement} node\n     */\n    constructor(rule, node) {\n        /** {Rule} */\n        this.rule = new Rule(rule.css, rule.mediaRule);\n\n        /** {HTMLElement} */\n        this.node = node;\n    }\n}\n\n\n/**\n * A parsed rule.\n * @class\n */\nclass Rule {\n    /**\n     * Constructor method.\n     * @param {CSSStyleRule} css The CSSStyleRule containing parsable CSS.\n     * @param {CSSMediaRule} mediaRule CSSMediaRule allowing to determine when to activate this rule.\n     */\n    constructor(css, mediaRule) {\n        let data = this.parseCSS(css);\n        this.css = css;\n        this.mediaRule = mediaRule;\n        this.selector = data.selector;\n        this.nodes = document.querySelectorAll(this.selector);\n        this.rules = data.rules;\n        this.addMeta();\n    }\n\n    /**\n     * Parses a\n     * @param {CSSStyleRule} css\n     * @returns {Rule}\n     */\n    parseCSS(rule) {\n        let split = rule.cssText.split('{');\n        let selector = split[0].trim();\n        let rules = split[1]\n            .replace(/([^:;]+)/g, '\"$1\"')\n            .replace(/;/g, ',')\n            .replace(/\\s*?\"\\s+?/g, '\"')\n            .replace(/,\"}\"$/g, '}');\n\n        rules = JSON.parse('{' + rules);\n\n        return {\n            selector,\n            rules\n        };\n    }\n\n    /**\n     * Adds meta key to this.\n     * Meta contains processed information about the this.rules.\n     */\n    addMeta() {\n        this.meta = {};\n        this.addColumns();\n        this.addGridArea();\n        this.addGap('grid-gap');\n        this.addGap('grid-column-gap');\n        this.addGap('grid-row-gap');\n        this.addSpan('grid-column');\n        this.addSpan('grid-row');\n    }\n\n    /**\n     * Parses \"grid-area\".\n     * Adds \"colSpan\" and \"rowSpan\" to meta.\n     */\n    addGridArea() {\n        let cssText = this.rules['grid-area'];\n        if (cssText) {\n            let split = cssText.match(/span\\s+?\\d+/g);\n\n            if (split[0]) {\n                this.meta.rowSpan = parseInt(split[0].match(/\\d+/));\n            }\n            if (split[1]) {\n                this.meta.colSpan = parseInt(split[1].match(/\\d+/));\n            }\n        }\n    }\n\n    /**\n     * Parses \"grid-template-columns\".\n     * Adds \"columns\" to meta.\n     */\n    addColumns() {\n        let cssText = this.rules['grid-template-columns'];\n        if (cssText) {\n            let columns = cssText\n                .replace(/\\[.+?\\]/g, '')\n                .trim()\n                .split(/\\s+/);\n\n            this.meta.columns = [];\n            for (let i = 0; i < columns.length; i++) {\n                this.meta.columns.push({width: columns[i]});\n            }\n        }\n    }\n\n    /**\n     * Parses \"grid-column-gap\", \"grid-row-gap\" and \"grid-gap\".\n     * Adds \"colGap\" and \"rowGap\" to meta.\n     * @param {string} property\n     */\n    addGap(property) {\n        let cssText = this.rules[property];\n\n        if (property === 'grid-gap' && cssText) {\n            let split = cssText.split(/\\s+/);\n\n            if (split[0]) {\n                this.meta.rowGap = split[0];\n            }\n            if (split[1]) {\n                this.meta.colGap = split[1];\n            }\n        }\n\n        else if (cssText) {\n            let key = (property.match('column') ? 'colGap' : 'rowGap');\n            this.meta[key] = cssText;\n        }\n    }\n\n    /**\n     * Parses \"grid-column\" and \"grid-row\".\n     * Adds \"colSpan\" and \"rowSpan\" to meta.\n     * @param {string} property\n     */\n    addSpan(property) {\n        let cssText = this.rules[property];\n        if (cssText) {\n            let span = cssText.match(/span\\s+?\\d+/g);\n            if (span) {\n                let key = (property.match('column') ? 'colSpan' : 'rowSpan');\n                this.meta[key] = span[0].match(/\\d+/)[0];\n            }\n        }\n    }\n\n    /**\n     * Returns whether this rule is a display: grid; statement.\n     * This can be used to filter the grid container/parent.\n     * @returns {boolean}\n     */\n    isDisplayGrid() {\n        let keys = Object.keys(this.rules)\n            .filter(key => key.toLowerCase().match(/grid-template/));\n        return keys.length > 0;\n    }\n\n    /**\n     * Returns whether this rule describes CSS grid behaviour.\n     * @returns {boolean}\n     */\n    isGridRelated() {\n        return this.isDisplayGrid() || !!Object.keys(this.rules)\n            .filter(key => key.match(/^grid/)).length;\n    }\n\n    /**\n     * Returns whether this rule is applicable to the current state of the browser.\n     * This takes media queries into account.\n     * @returns {boolean}\n     */\n    isApplicable() {\n        if (this.mediaRule) {\n            return this.evaluateMediaRule();\n        }\n        return true;\n    }\n\n    /**\n     * Evaluates this.mediaRule using enquire.js.\n     * @returns {boolean}\n     */\n    evaluateMediaRule() {\n        let result = null;\n        let mq = this.mediaRule.cssText.match(/media.+(?=\\s+{)/g);\n        if (mq[0]) {\n            mq = mq[0].replace('media ', '');\n            enquire.register(mq, {\n                match: () => result = true,\n                unmatch: () => result = false\n            });\n            return result;\n        }\n    }\n}\n\n\n// if(navigator.userAgent.toLowerCase().match('trident')) {\nnew Polyfill();\n// }\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","var MediaQueryDispatch = require('./MediaQueryDispatch');\nmodule.exports = new MediaQueryDispatch();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/enquire.js/src/index.js\n// module id = 1\n// module chunks = 0","var MediaQuery = require('./MediaQuery');\nvar Util = require('./Util');\nvar each = Util.each;\nvar isFunction = Util.isFunction;\nvar isArray = Util.isArray;\n\n/**\n * Allows for registration of query handlers.\n * Manages the query handler's state and is responsible for wiring up browser events\n *\n * @constructor\n */\nfunction MediaQueryDispatch () {\n    if(!window.matchMedia) {\n        throw new Error('matchMedia not present, legacy browsers require a polyfill');\n    }\n\n    this.queries = {};\n    this.browserIsIncapable = !window.matchMedia('only all').matches;\n}\n\nMediaQueryDispatch.prototype = {\n\n    constructor : MediaQueryDispatch,\n\n    /**\n     * Registers a handler for the given media query\n     *\n     * @param {string} q the media query\n     * @param {object || Array || Function} options either a single query handler object, a function, or an array of query handlers\n     * @param {function} options.match fired when query matched\n     * @param {function} [options.unmatch] fired when a query is no longer matched\n     * @param {function} [options.setup] fired when handler first triggered\n     * @param {boolean} [options.deferSetup=false] whether setup should be run immediately or deferred until query is first matched\n     * @param {boolean} [shouldDegrade=false] whether this particular media query should always run on incapable browsers\n     */\n    register : function(q, options, shouldDegrade) {\n        var queries         = this.queries,\n            isUnconditional = shouldDegrade && this.browserIsIncapable;\n\n        if(!queries[q]) {\n            queries[q] = new MediaQuery(q, isUnconditional);\n        }\n\n        //normalise to object in an array\n        if(isFunction(options)) {\n            options = { match : options };\n        }\n        if(!isArray(options)) {\n            options = [options];\n        }\n        each(options, function(handler) {\n            if (isFunction(handler)) {\n                handler = { match : handler };\n            }\n            queries[q].addHandler(handler);\n        });\n\n        return this;\n    },\n\n    /**\n     * unregisters a query and all it's handlers, or a specific handler for a query\n     *\n     * @param {string} q the media query to target\n     * @param {object || function} [handler] specific handler to unregister\n     */\n    unregister : function(q, handler) {\n        var query = this.queries[q];\n\n        if(query) {\n            if(handler) {\n                query.removeHandler(handler);\n            }\n            else {\n                query.clear();\n                delete this.queries[q];\n            }\n        }\n\n        return this;\n    }\n};\n\nmodule.exports = MediaQueryDispatch;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/enquire.js/src/MediaQueryDispatch.js\n// module id = 2\n// module chunks = 0","var QueryHandler = require('./QueryHandler');\nvar each = require('./Util').each;\n\n/**\n * Represents a single media query, manages it's state and registered handlers for this query\n *\n * @constructor\n * @param {string} query the media query string\n * @param {boolean} [isUnconditional=false] whether the media query should run regardless of whether the conditions are met. Primarily for helping older browsers deal with mobile-first design\n */\nfunction MediaQuery(query, isUnconditional) {\n    this.query = query;\n    this.isUnconditional = isUnconditional;\n    this.handlers = [];\n    this.mql = window.matchMedia(query);\n\n    var self = this;\n    this.listener = function(mql) {\n        // Chrome passes an MediaQueryListEvent object, while other browsers pass MediaQueryList directly\n        self.mql = mql.currentTarget || mql;\n        self.assess();\n    };\n    this.mql.addListener(this.listener);\n}\n\nMediaQuery.prototype = {\n\n    constuctor : MediaQuery,\n\n    /**\n     * add a handler for this query, triggering if already active\n     *\n     * @param {object} handler\n     * @param {function} handler.match callback for when query is activated\n     * @param {function} [handler.unmatch] callback for when query is deactivated\n     * @param {function} [handler.setup] callback for immediate execution when a query handler is registered\n     * @param {boolean} [handler.deferSetup=false] should the setup callback be deferred until the first time the handler is matched?\n     */\n    addHandler : function(handler) {\n        var qh = new QueryHandler(handler);\n        this.handlers.push(qh);\n\n        this.matches() && qh.on();\n    },\n\n    /**\n     * removes the given handler from the collection, and calls it's destroy methods\n     *\n     * @param {object || function} handler the handler to remove\n     */\n    removeHandler : function(handler) {\n        var handlers = this.handlers;\n        each(handlers, function(h, i) {\n            if(h.equals(handler)) {\n                h.destroy();\n                return !handlers.splice(i,1); //remove from array and exit each early\n            }\n        });\n    },\n\n    /**\n     * Determine whether the media query should be considered a match\n     *\n     * @return {Boolean} true if media query can be considered a match, false otherwise\n     */\n    matches : function() {\n        return this.mql.matches || this.isUnconditional;\n    },\n\n    /**\n     * Clears all handlers and unbinds events\n     */\n    clear : function() {\n        each(this.handlers, function(handler) {\n            handler.destroy();\n        });\n        this.mql.removeListener(this.listener);\n        this.handlers.length = 0; //clear array\n    },\n\n    /*\n        * Assesses the query, turning on all handlers if it matches, turning them off if it doesn't match\n        */\n    assess : function() {\n        var action = this.matches() ? 'on' : 'off';\n\n        each(this.handlers, function(handler) {\n            handler[action]();\n        });\n    }\n};\n\nmodule.exports = MediaQuery;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/enquire.js/src/MediaQuery.js\n// module id = 3\n// module chunks = 0","/**\n * Delegate to handle a media query being matched and unmatched.\n *\n * @param {object} options\n * @param {function} options.match callback for when the media query is matched\n * @param {function} [options.unmatch] callback for when the media query is unmatched\n * @param {function} [options.setup] one-time callback triggered the first time a query is matched\n * @param {boolean} [options.deferSetup=false] should the setup callback be run immediately, rather than first time query is matched?\n * @constructor\n */\nfunction QueryHandler(options) {\n    this.options = options;\n    !options.deferSetup && this.setup();\n}\n\nQueryHandler.prototype = {\n\n    constructor : QueryHandler,\n\n    /**\n     * coordinates setup of the handler\n     *\n     * @function\n     */\n    setup : function() {\n        if(this.options.setup) {\n            this.options.setup();\n        }\n        this.initialised = true;\n    },\n\n    /**\n     * coordinates setup and triggering of the handler\n     *\n     * @function\n     */\n    on : function() {\n        !this.initialised && this.setup();\n        this.options.match && this.options.match();\n    },\n\n    /**\n     * coordinates the unmatch event for the handler\n     *\n     * @function\n     */\n    off : function() {\n        this.options.unmatch && this.options.unmatch();\n    },\n\n    /**\n     * called when a handler is to be destroyed.\n     * delegates to the destroy or unmatch callbacks, depending on availability.\n     *\n     * @function\n     */\n    destroy : function() {\n        this.options.destroy ? this.options.destroy() : this.off();\n    },\n\n    /**\n     * determines equality by reference.\n     * if object is supplied compare options, if function, compare match callback\n     *\n     * @function\n     * @param {object || function} [target] the target for comparison\n     */\n    equals : function(target) {\n        return this.options === target || this.options.match === target;\n    }\n\n};\n\nmodule.exports = QueryHandler;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/enquire.js/src/QueryHandler.js\n// module id = 4\n// module chunks = 0","/**\n * Helper function for iterating over a collection\n *\n * @param collection\n * @param fn\n */\nfunction each(collection, fn) {\n    var i      = 0,\n        length = collection.length,\n        cont;\n\n    for(i; i < length; i++) {\n        cont = fn(collection[i], i);\n        if(cont === false) {\n            break; //allow early exit\n        }\n    }\n}\n\n/**\n * Helper function for determining whether target object is an array\n *\n * @param target the object under test\n * @return {Boolean} true if array, false otherwise\n */\nfunction isArray(target) {\n    return Object.prototype.toString.apply(target) === '[object Array]';\n}\n\n/**\n * Helper function for determining whether target object is a function\n *\n * @param target the object under test\n * @return {Boolean} true if function, false otherwise\n */\nfunction isFunction(target) {\n    return typeof target === 'function';\n}\n\nmodule.exports = {\n    isFunction : isFunction,\n    isArray : isArray,\n    each : each\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/enquire.js/src/Util.js\n// module id = 5\n// module chunks = 0"],"sourceRoot":""}